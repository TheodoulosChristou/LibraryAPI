// <auto-generated />
using System;
using LIbraryAPI.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LIbraryAPI.Migrations
{
    [DbContext(typeof(ProjectDbContext))]
    [Migration("20240918210306_Create-User-Table")]
    partial class CreateUserTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LIbraryAPI.Entity.Author", b =>
                {
                    b.Property<int>("AUTHOR_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AUTHOR_ID"));

                    b.Property<int>("AGE")
                        .HasColumnType("int");

                    b.Property<string>("AUTHOR_NAME")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AUTHOR_SURNAME")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("AUTHOR_ID");

                    b.ToTable("Author", (string)null);
                });

            modelBuilder.Entity("LIbraryAPI.Entity.Book", b =>
                {
                    b.Property<int>("BOOK_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BOOK_ID"));

                    b.Property<string>("BOOK_NAME")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("DATE_PUBLISHED")
                        .HasColumnType("datetime2");

                    b.HasKey("BOOK_ID");

                    b.ToTable("Book", (string)null);
                });

            modelBuilder.Entity("LIbraryAPI.Entity.Publish", b =>
                {
                    b.Property<int>("PUBLISH_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PUBLISH_ID"));

                    b.Property<int>("AUTHOR_ID")
                        .HasColumnType("int");

                    b.Property<int>("BOOK_ID")
                        .HasColumnType("int");

                    b.HasKey("PUBLISH_ID");

                    b.HasIndex("AUTHOR_ID");

                    b.HasIndex("BOOK_ID");

                    b.ToTable("Publish", (string)null);
                });

            modelBuilder.Entity("LIbraryAPI.Entity.User", b =>
                {
                    b.Property<int>("USER_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("USER_ID"));

                    b.Property<string>("ADDRESS")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("EMAIL")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FIRST_NAME")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("LAST_NAME")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PHONE_NUMBER")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("USER_ID");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("LIbraryAPI.Entity.Publish", b =>
                {
                    b.HasOne("LIbraryAPI.Entity.Author", null)
                        .WithMany()
                        .HasForeignKey("AUTHOR_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LIbraryAPI.Entity.Book", null)
                        .WithMany()
                        .HasForeignKey("BOOK_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
